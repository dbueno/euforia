; filename: "../../vmt2/examples/bad-unsound_false.c"
(set-info :source |Printed by VMT_Standalone 0.1 [taco]|)
; state variable decarations
(declare-fun %call.i-main* () (_ BitVec 32))
(declare-fun %call.i-main*+ () (_ BitVec 32))
(declare-fun @L4* () Bool)
(declare-fun @L4*+ () Bool)
(declare-fun @L3* () Bool)
(declare-fun @L3*+ () Bool)
(declare-fun @L0* () Bool)
(declare-fun @L0*+ () Bool)
; aux variable declarations
(declare-fun %cmp.i-main () Bool)
(declare-fun @L2 () Bool)
(declare-fun @L1 () Bool)
; input variable decarations
(declare-fun call.i-$Y32-0 () (_ BitVec 32))
; :next defs for state vars
(define-fun .def0 () (_ BitVec 32) (! %call.i-main* :next %call.i-main*+))
(define-fun .def1 () Bool (! @L4* :next @L4*+))
(define-fun .def2 () Bool (! @L3* :next @L3*+))
(define-fun .def3 () Bool (! @L0* :next @L0*+))
; initial state
(define-fun .def4 () Bool (= %call.i-main* #x00000000))
(define-fun .def5 () Bool (not @L3*))
(define-fun .def6 () Bool (not @L4*))
(define-fun .def7 () Bool (and @L0* .def6 .def5 .def4))
(define-fun .def8 () Bool (! .def7 :init true))
; transition relation
(define-fun .def9 () Bool (= %call.i-main*+ %call.i-main*))
(define-fun .def10 () Bool (or @L1 .def9))
(define-fun .def11 () Bool (or @L2 @L4*))
(define-fun .def12 () Bool (= @L4*+ .def11))
(define-fun .def13 () Bool (not %cmp.i-main))
(define-fun .def14 () Bool (and @L1 .def13))
(define-fun .def15 () Bool (or .def14 @L3*))
(define-fun .def16 () Bool (= @L3*+ .def15))
(define-fun .def17 () Bool (and @L1 %cmp.i-main))
(define-fun .def18 () Bool (= @L2 .def17))
(define-fun .def19 () Bool (= %call.i-main*+ call.i-$Y32-0))
(define-fun .def20 () Bool (not @L1))
(define-fun .def21 () Bool (or .def20 .def19))
(define-fun .def22 () (_ BitVec 32) (ite @L1 call.i-$Y32-0 %call.i-main*))
(define-fun .def23 () Bool (= .def22 #x00000000))
(define-fun .def24 () Bool (= %cmp.i-main .def23))
(define-fun .def25 () Bool (= @L1 @L0*))
(define-fun .def26 () Bool (not @L0*+))
(define-fun .def27 () Bool (and .def26 .def25))
(define-fun .def28 () Bool (and .def27 .def24))
(define-fun .def29 () Bool (and .def28 .def21))
(define-fun .def30 () Bool (and .def29 .def18))
(define-fun .def31 () Bool (and .def30 .def16))
(define-fun .def32 () Bool (and .def31 .def12))
(define-fun .def33 () Bool (and .def32 .def10))
(define-fun .def34 () Bool (! .def33 :trans true))
; property
(define-fun .def35 () Bool (! .def5 :invar-property 0))
(assert true)
