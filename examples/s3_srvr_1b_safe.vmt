; filename: "s3_srvr_1b_safe.c"
(set-info :source |Printed by VMT_Standalone 0.1 [taco]|)
; state variable decarations
(declare-fun %blastFlag.0-main* () (_ BitVec 32))
(declare-fun %blastFlag.0-main*+ () (_ BitVec 32))
(declare-fun %call-main* () (_ BitVec 32))
(declare-fun %call-main*+ () (_ BitVec 32))
(declare-fun @L4* () Bool)
(declare-fun @L4*+ () Bool)
(declare-fun %s__state.3-main* () (_ BitVec 32))
(declare-fun %s__state.3-main*+ () (_ BitVec 32))
(declare-fun %s__state.0-main* () (_ BitVec 32))
(declare-fun %s__state.0-main*+ () (_ BitVec 32))
(declare-fun @L0* () Bool)
(declare-fun @L0*+ () Bool)
(declare-fun %blastFlag.5-main* () (_ BitVec 32))
(declare-fun %blastFlag.5-main*+ () (_ BitVec 32))
(declare-fun %call19-main* () (_ BitVec 32))
(declare-fun %call19-main*+ () (_ BitVec 32))
(declare-fun @L28* () Bool)
(declare-fun @L28*+ () Bool)
(declare-fun @L18* () Bool)
(declare-fun @L18*+ () Bool)
(declare-fun @L24* () Bool)
(declare-fun @L24*+ () Bool)
(declare-fun @L2* () Bool)
(declare-fun @L2*+ () Bool)
(declare-fun %blastFlag.4-main* () (_ BitVec 32))
(declare-fun %blastFlag.4-main*+ () (_ BitVec 32))
; aux variable declarations
(declare-fun %or.cond-main () Bool)
(declare-fun %cmp1-main () Bool)
(declare-fun %cmp-main () Bool)
(declare-fun @L3 () Bool)
(declare-fun %Pivot12-main () Bool)
(declare-fun @L26 () Bool)
(declare-fun %Pivot-main () Bool)
(declare-fun @L7 () Bool)
(declare-fun %SwitchLeaf4-main () Bool)
(declare-fun %Pivot10-main () Bool)
(declare-fun %.blastFlag.02-main () (_ BitVec 32))
(declare-fun %cmp31-main () Bool)
(declare-fun %.blastFlag.01-main () (_ BitVec 32))
(declare-fun @L23 () Bool)
(declare-fun %cmp24-main () Bool)
(declare-fun %SwitchLeaf-main () Bool)
(declare-fun %Pivot19-main () Bool)
(declare-fun %.-main () (_ BitVec 32))
(declare-fun @L14 () Bool)
(declare-fun %tobool20-main () Bool)
(declare-fun @L15 () Bool)
(declare-fun @L27 () Bool)
(declare-fun %.blastFlag.0-main () (_ BitVec 32))
(declare-fun %cmp13-main () Bool)
(declare-fun %SwitchLeaf15-main () Bool)
(declare-fun %SwitchLeaf17-main () Bool)
(declare-fun %tobool27-main () Bool)
(declare-fun %tobool41-main () Bool)
(declare-fun @L16 () Bool)
(declare-fun @L21 () Bool)
(declare-fun @L25 () Bool)
(declare-fun @L22 () Bool)
(declare-fun @L11 () Bool)
(declare-fun @L19 () Bool)
(declare-fun @L17 () Bool)
(declare-fun %SwitchLeaf8-main () Bool)
(declare-fun %tobool-main () Bool)
(declare-fun @L9 () Bool)
(declare-fun @L12 () Bool)
(declare-fun %s__state.1-main () (_ BitVec 32))
(declare-fun @L10 () Bool)
(declare-fun %SwitchLeaf6-main () Bool)
(declare-fun @L13 () Bool)
(declare-fun @L1 () Bool)
(declare-fun @L8 () Bool)
(declare-fun @L6 () Bool)
(declare-fun @L5 () Bool)
(declare-fun @L20 () Bool)
; input variable decarations
(declare-fun call-$Y32-1 () (_ BitVec 32))
(declare-fun call19-$Y32-0 () (_ BitVec 32))
; :next defs for state vars
(define-fun .def0 () (_ BitVec 32) (! %blastFlag.0-main* :next %blastFlag.0-main*+))
(define-fun .def1 () (_ BitVec 32) (! %call-main* :next %call-main*+))
(define-fun .def2 () Bool (! @L4* :next @L4*+))
(define-fun .def3 () (_ BitVec 32) (! %s__state.3-main* :next %s__state.3-main*+))
(define-fun .def4 () (_ BitVec 32) (! %s__state.0-main* :next %s__state.0-main*+))
(define-fun .def5 () Bool (! @L0* :next @L0*+))
(define-fun .def6 () (_ BitVec 32) (! %blastFlag.5-main* :next %blastFlag.5-main*+))
(define-fun .def7 () (_ BitVec 32) (! %call19-main* :next %call19-main*+))
(define-fun .def8 () Bool (! @L28* :next @L28*+))
(define-fun .def9 () Bool (! @L18* :next @L18*+))
(define-fun .def10 () Bool (! @L24* :next @L24*+))
(define-fun .def11 () Bool (! @L2* :next @L2*+))
(define-fun .def12 () (_ BitVec 32) (! %blastFlag.4-main* :next %blastFlag.4-main*+))
; initial state
(define-fun .def13 () Bool (= %blastFlag.4-main* #x00000000))
(define-fun .def14 () Bool (= %call-main* #x00000000))
(define-fun .def15 () Bool (= %s__state.3-main* #x00000000))
(define-fun .def16 () Bool (= %blastFlag.5-main* #x00000000))
(define-fun .def17 () Bool (= %s__state.0-main* #x00000000))
(define-fun .def18 () Bool (= %call19-main* #x00000000))
(define-fun .def19 () Bool (= %blastFlag.0-main* #x00000000))
(define-fun .def20 () Bool (not @L2*))
(define-fun .def21 () Bool (not @L4*))
(define-fun .def22 () Bool (not @L24*))
(define-fun .def23 () Bool (not @L28*))
(define-fun .def24 () Bool (not @L18*))
(define-fun .def25 () Bool (and @L0* .def24 .def23 .def22 .def21 .def20 .def19 .def18 .def17 .def16 .def15 .def14 .def13))
(define-fun .def26 () Bool (! .def25 :init true))
; transition relation
(define-fun .def27 () Bool (= %blastFlag.4-main*+ %blastFlag.4-main*))
(define-fun .def28 () Bool (or @L24*+ .def27))
(define-fun .def29 () Bool (= %call-main*+ %call-main*))
(define-fun .def30 () Bool (or @L1 .def29))
(define-fun .def31 () Bool (= %s__state.3-main*+ %s__state.3-main*))
(define-fun .def32 () Bool (or @L18*+ .def31))
(define-fun .def33 () Bool (= %call19-main*+ %call19-main*))
(define-fun .def34 () Bool (or @L16 .def33))
(define-fun .def35 () Bool (= %blastFlag.5-main*+ %blastFlag.5-main*))
(define-fun .def36 () Bool (or @L18*+ .def35))
(define-fun .def37 () Bool (= %s__state.0-main*+ %s__state.0-main*))
(define-fun .def38 () Bool (or @L2*+ .def37))
(define-fun .def39 () Bool (= %blastFlag.0-main*+ %blastFlag.0-main*))
(define-fun .def40 () Bool (or @L2*+ .def39))
(define-fun .def41 () Bool (or @L19 @L28*))
(define-fun .def42 () Bool (= @L28*+ .def41))
(define-fun .def43 () Bool (= @L27 @L18*))
(define-fun .def44 () (_ BitVec 32) (ite @L1 call-$Y32-1 %call-main*))
(define-fun .def45 () Bool (= .def44 #x00000000))
(define-fun .def46 () Bool (not .def45))
(define-fun .def47 () Bool (= %tobool41-main .def46))
(define-fun .def48 () Bool (= @L26 @L24*))
(define-fun .def49 () Bool (= @L25 @L23))
(define-fun .def50 () (_ BitVec 32) (ite @L25 %.blastFlag.02-main #x00000005))
(define-fun .def51 () Bool (= %blastFlag.4-main*+ .def50))
(define-fun .def52 () Bool (not @L24*+))
(define-fun .def53 () Bool (or .def52 .def51))
(define-fun .def54 () Bool (and @L21 %SwitchLeaf15-main))
(define-fun .def55 () Bool (or .def54 @L25))
(define-fun .def56 () Bool (= @L24*+ .def55))
(define-fun .def57 () Bool (not %SwitchLeaf17-main))
(define-fun .def58 () Bool (and @L22 .def57))
(define-fun .def59 () Bool (not %SwitchLeaf15-main))
(define-fun .def60 () Bool (and @L21 .def59))
(define-fun .def61 () Bool (or .def60 .def58))
(define-fun .def62 () Bool (= @L23 .def61))
(define-fun .def63 () Bool (= %.blastFlag.02-main #x00000005))
(define-fun .def64 () Bool (= %SwitchLeaf17-main .def63))
(define-fun .def65 () Bool (not %Pivot19-main))
(define-fun .def66 () Bool (and @L20 .def65))
(define-fun .def67 () Bool (= @L22 .def66))
(define-fun .def68 () Bool (= %.blastFlag.02-main #x00000004))
(define-fun .def69 () Bool (= %SwitchLeaf15-main .def68))
(define-fun .def70 () Bool (and @L20 %Pivot19-main))
(define-fun .def71 () Bool (= @L21 .def70))
(define-fun .def72 () Bool (bvsle #x00000005 %.blastFlag.02-main))
(define-fun .def73 () Bool (not .def72))
(define-fun .def74 () Bool (= %Pivot19-main .def73))
(define-fun .def75 () Bool (= @L20 @L11))
(define-fun .def76 () Bool (not %tobool41-main))
(define-fun .def77 () Bool (and @L26 .def76))
(define-fun .def78 () Bool (and @L13 %tobool27-main))
(define-fun .def79 () Bool (or .def78 .def77))
(define-fun .def80 () Bool (or @L12 .def79))
(define-fun .def81 () Bool (= @L19 .def80))
(define-fun .def82 () Bool (and @L26 %tobool41-main))
(define-fun .def83 () (_ BitVec 32) (ite .def82 #x000021c0 #x000021d0))
(define-fun .def84 () (_ BitVec 32) (ite @L17 %s__state.1-main .def83))
(define-fun .def85 () (_ BitVec 32) (ite @L16 %.-main .def84))
(define-fun .def86 () Bool (= %s__state.3-main*+ .def85))
(define-fun .def87 () Bool (not @L18*+))
(define-fun .def88 () Bool (or .def87 .def86))
(define-fun .def89 () Bool (not %tobool27-main))
(define-fun .def90 () Bool (and @L13 .def89))
(define-fun .def91 () (_ BitVec 32) (ite .def90 %.blastFlag.01-main %blastFlag.4-main*))
(define-fun .def92 () (_ BitVec 32) (ite @L17 %.blastFlag.0-main .def91))
(define-fun .def93 () (_ BitVec 32) (ite @L16 %blastFlag.0-main* .def92))
(define-fun .def94 () Bool (= %blastFlag.5-main*+ .def93))
(define-fun .def95 () Bool (or .def87 .def94))
(define-fun .def96 () Bool (or @L17 .def82))
(define-fun .def97 () Bool (or @L16 .def96))
(define-fun .def98 () Bool (or .def90 .def97))
(define-fun .def99 () Bool (= @L18*+ .def98))
(define-fun .def100 () Bool (= %cmp13-main .def19))
(define-fun .def101 () (_ BitVec 32) (ite %cmp13-main #x00000002 %blastFlag.0-main*))
(define-fun .def102 () Bool (= %.blastFlag.0-main .def101))
(define-fun .def103 () Bool (= %tobool-main .def46))
(define-fun .def104 () (_ BitVec 32) (ite %tobool-main #x000021d0 #x00002140))
(define-fun .def105 () Bool (= %s__state.1-main .def104))
(define-fun .def106 () Bool (and @L14 %SwitchLeaf-main))
(define-fun .def107 () Bool (= @L17 .def106))
(define-fun .def108 () Bool (= %call19-main*+ call19-$Y32-0))
(define-fun .def109 () Bool (not @L16))
(define-fun .def110 () Bool (or .def109 .def108))
(define-fun .def111 () (_ BitVec 32) (ite @L16 call19-$Y32-0 %call19-main*))
(define-fun .def112 () Bool (= .def111 #x00000000))
(define-fun .def113 () Bool (not .def112))
(define-fun .def114 () Bool (= %tobool20-main .def113))
(define-fun .def115 () (_ BitVec 32) (ite %tobool20-main #x00002112 #x000021c0))
(define-fun .def116 () Bool (= %.-main .def115))
(define-fun .def117 () Bool (and @L15 %SwitchLeaf4-main))
(define-fun .def118 () Bool (= @L16 .def117))
(define-fun .def119 () Bool (= %s__state.0-main* #x00002140))
(define-fun .def120 () Bool (= %SwitchLeaf4-main .def119))
(define-fun .def121 () Bool (not %Pivot-main))
(define-fun .def122 () Bool (and @L7 .def121))
(define-fun .def123 () Bool (= @L15 .def122))
(define-fun .def124 () Bool (= %s__state.0-main* #x00002112))
(define-fun .def125 () Bool (= %SwitchLeaf-main .def124))
(define-fun .def126 () Bool (and @L7 %Pivot-main))
(define-fun .def127 () Bool (= @L14 .def126))
(define-fun .def128 () Bool (= %blastFlag.0-main* #x00000003))
(define-fun .def129 () Bool (= %cmp24-main .def128))
(define-fun .def130 () (_ BitVec 32) (ite %cmp24-main #x00000004 %blastFlag.0-main*))
(define-fun .def131 () Bool (= %.blastFlag.01-main .def130))
(define-fun .def132 () Bool (= %tobool27-main .def46))
(define-fun .def133 () Bool (and @L9 %SwitchLeaf6-main))
(define-fun .def134 () Bool (= @L13 .def133))
(define-fun .def135 () Bool (not %SwitchLeaf4-main))
(define-fun .def136 () Bool (and @L15 .def135))
(define-fun .def137 () Bool (not %SwitchLeaf-main))
(define-fun .def138 () Bool (and @L14 .def137))
(define-fun .def139 () Bool (or .def138 .def136))
(define-fun .def140 () Bool (not %SwitchLeaf8-main))
(define-fun .def141 () Bool (and @L10 .def140))
(define-fun .def142 () Bool (or .def141 .def139))
(define-fun .def143 () Bool (not %SwitchLeaf6-main))
(define-fun .def144 () Bool (and @L9 .def143))
(define-fun .def145 () Bool (or .def144 .def142))
(define-fun .def146 () Bool (= @L12 .def145))
(define-fun .def147 () Bool (= %blastFlag.0-main* #x00000002))
(define-fun .def148 () Bool (= %cmp31-main .def147))
(define-fun .def149 () (_ BitVec 32) (ite %cmp31-main #x00000003 %blastFlag.0-main*))
(define-fun .def150 () Bool (= %.blastFlag.02-main .def149))
(define-fun .def151 () Bool (and @L10 %SwitchLeaf8-main))
(define-fun .def152 () Bool (= @L11 .def151))
(define-fun .def153 () Bool (= %s__state.0-main* #x000021d0))
(define-fun .def154 () Bool (= %SwitchLeaf8-main .def153))
(define-fun .def155 () Bool (not %Pivot10-main))
(define-fun .def156 () Bool (and @L8 .def155))
(define-fun .def157 () Bool (= @L10 .def156))
(define-fun .def158 () Bool (= %s__state.0-main* #x000021c0))
(define-fun .def159 () Bool (= %SwitchLeaf6-main .def158))
(define-fun .def160 () Bool (and @L8 %Pivot10-main))
(define-fun .def161 () Bool (= @L9 .def160))
(define-fun .def162 () Bool (bvsle #x000021d0 %s__state.0-main*))
(define-fun .def163 () Bool (not .def162))
(define-fun .def164 () Bool (= %Pivot10-main .def163))
(define-fun .def165 () Bool (not %Pivot12-main))
(define-fun .def166 () Bool (and @L6 .def165))
(define-fun .def167 () Bool (= @L8 .def166))
(define-fun .def168 () Bool (bvsle #x00002140 %s__state.0-main*))
(define-fun .def169 () Bool (not .def168))
(define-fun .def170 () Bool (= %Pivot-main .def169))
(define-fun .def171 () Bool (and @L6 %Pivot12-main))
(define-fun .def172 () Bool (= @L7 .def171))
(define-fun .def173 () Bool (bvsle #x000021c0 %s__state.0-main*))
(define-fun .def174 () Bool (not .def173))
(define-fun .def175 () Bool (= %Pivot12-main .def174))
(define-fun .def176 () Bool (= @L6 @L5))
(define-fun .def177 () Bool (not %or.cond-main))
(define-fun .def178 () Bool (and @L3 .def177))
(define-fun .def179 () Bool (= @L5 .def178))
(define-fun .def180 () Bool (and @L22 %SwitchLeaf17-main))
(define-fun .def181 () Bool (or @L4* .def180))
(define-fun .def182 () Bool (and @L3 %or.cond-main))
(define-fun .def183 () Bool (or .def182 .def181))
(define-fun .def184 () Bool (= @L4*+ .def183))
(define-fun .def185 () Bool (bvsle %s__state.0-main* #x00002140))
(define-fun .def186 () Bool (= %cmp-main .def185))
(define-fun .def187 () Bool (bvsle %blastFlag.0-main* #x00000002))
(define-fun .def188 () Bool (not .def187))
(define-fun .def189 () Bool (= %cmp1-main .def188))
(define-fun .def190 () Bool (and %cmp-main %cmp1-main))
(define-fun .def191 () Bool (= %or.cond-main .def190))
(define-fun .def192 () Bool (= @L3 @L2*))
(define-fun .def193 () (_ BitVec 32) (ite @L1 #x00002112 %s__state.3-main*))
(define-fun .def194 () Bool (= %s__state.0-main*+ .def193))
(define-fun .def195 () Bool (not @L2*+))
(define-fun .def196 () Bool (or .def195 .def194))
(define-fun .def197 () (_ BitVec 32) (ite @L1 #x00000000 %blastFlag.5-main*))
(define-fun .def198 () Bool (= %blastFlag.0-main*+ .def197))
(define-fun .def199 () Bool (or .def195 .def198))
(define-fun .def200 () Bool (or @L1 @L27))
(define-fun .def201 () Bool (= @L2*+ .def200))
(define-fun .def202 () Bool (= %call-main*+ call-$Y32-1))
(define-fun .def203 () Bool (not @L1))
(define-fun .def204 () Bool (or .def203 .def202))
(define-fun .def205 () Bool (= @L1 @L0*))
(define-fun .def206 () Bool (not @L0*+))
(define-fun .def207 () Bool (and .def206 .def205))
(define-fun .def208 () Bool (and .def207 .def204))
(define-fun .def209 () Bool (and .def208 .def201))
(define-fun .def210 () Bool (and .def209 .def199))
(define-fun .def211 () Bool (and .def210 .def196))
(define-fun .def212 () Bool (and .def211 .def192))
(define-fun .def213 () Bool (and .def212 .def191))
(define-fun .def214 () Bool (and .def213 .def189))
(define-fun .def215 () Bool (and .def214 .def186))
(define-fun .def216 () Bool (and .def215 .def184))
(define-fun .def217 () Bool (and .def216 .def179))
(define-fun .def218 () Bool (and .def217 .def176))
(define-fun .def219 () Bool (and .def218 .def175))
(define-fun .def220 () Bool (and .def219 .def172))
(define-fun .def221 () Bool (and .def220 .def170))
(define-fun .def222 () Bool (and .def221 .def167))
(define-fun .def223 () Bool (and .def222 .def164))
(define-fun .def224 () Bool (and .def223 .def161))
(define-fun .def225 () Bool (and .def224 .def159))
(define-fun .def226 () Bool (and .def225 .def157))
(define-fun .def227 () Bool (and .def226 .def154))
(define-fun .def228 () Bool (and .def227 .def152))
(define-fun .def229 () Bool (and .def228 .def150))
(define-fun .def230 () Bool (and .def229 .def148))
(define-fun .def231 () Bool (and .def230 .def146))
(define-fun .def232 () Bool (and .def231 .def134))
(define-fun .def233 () Bool (and .def232 .def132))
(define-fun .def234 () Bool (and .def233 .def131))
(define-fun .def235 () Bool (and .def234 .def129))
(define-fun .def236 () Bool (and .def235 .def127))
(define-fun .def237 () Bool (and .def236 .def125))
(define-fun .def238 () Bool (and .def237 .def123))
(define-fun .def239 () Bool (and .def238 .def120))
(define-fun .def240 () Bool (and .def239 .def118))
(define-fun .def241 () Bool (and .def240 .def116))
(define-fun .def242 () Bool (and .def241 .def114))
(define-fun .def243 () Bool (and .def242 .def110))
(define-fun .def244 () Bool (and .def243 .def107))
(define-fun .def245 () Bool (and .def244 .def105))
(define-fun .def246 () Bool (and .def245 .def103))
(define-fun .def247 () Bool (and .def246 .def102))
(define-fun .def248 () Bool (and .def247 .def100))
(define-fun .def249 () Bool (and .def248 .def99))
(define-fun .def250 () Bool (and .def249 .def95))
(define-fun .def251 () Bool (and .def250 .def88))
(define-fun .def252 () Bool (and .def251 .def81))
(define-fun .def253 () Bool (and .def252 .def75))
(define-fun .def254 () Bool (and .def253 .def74))
(define-fun .def255 () Bool (and .def254 .def71))
(define-fun .def256 () Bool (and .def255 .def69))
(define-fun .def257 () Bool (and .def256 .def67))
(define-fun .def258 () Bool (and .def257 .def64))
(define-fun .def259 () Bool (and .def258 .def62))
(define-fun .def260 () Bool (and .def259 .def56))
(define-fun .def261 () Bool (and .def260 .def53))
(define-fun .def262 () Bool (and .def261 .def49))
(define-fun .def263 () Bool (and .def262 .def48))
(define-fun .def264 () Bool (and .def263 .def47))
(define-fun .def265 () Bool (and .def264 .def43))
(define-fun .def266 () Bool (and .def265 .def42))
(define-fun .def267 () Bool (and .def266 .def40))
(define-fun .def268 () Bool (and .def267 .def38))
(define-fun .def269 () Bool (and .def268 .def36))
(define-fun .def270 () Bool (and .def269 .def34))
(define-fun .def271 () Bool (and .def270 .def32))
(define-fun .def272 () Bool (and .def271 .def30))
(define-fun .def273 () Bool (and .def272 .def28))
(define-fun .def274 () Bool (! .def273 :trans true))
; property
(define-fun .def275 () Bool (! .def21 :invar-property 0))
(assert true)
