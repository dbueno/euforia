(declare-fun x () (_ BitVec 32))
(declare-fun x+ () (_ BitVec 32))
(declare-fun l () Bool)
(declare-fun l+ () Bool)
(declare-fun l2 () Bool)
(declare-fun @a () Bool)
(declare-fun @b () Bool)
(declare-fun @d () (_ BitVec 32))
(declare-fun @c () Bool)
(declare-fun @aj () Bool)
(declare-fun @e () Bool)
(define-fun d () (_ BitVec 2) (! x :next x+))
(define-fun ak () Bool (! l :next l+))
(define-fun .() Bool (! l2 :next l2+))
(define-fun .f () Bool (not l2))
(define-fun .al () Bool (not l))
(define-fun .am () Bool (and .al .f ))
(define-fun g () Bool (! .am :init h))
(define-fun .o () Bool @a )
(define-fun .t () Bool (not @b))
(define-fun .u () Bool (and @aj .t))
(define-fun .i () Bool .u )
(define-fun .v () Bool (= l+ .i))
(define-fun .j () (_ BitVec 2) (bvadd #x00000003 x))
(define-fun .aa () Bool (= @d .j))  (define-fun .w () Bool (= @c .)) (define-fun .k () Bool (bvsle                               #x00000007 x))
(define-fun .x () Bool (not .k)) (define-fun .y () Bool (= @b .x)) (define-fun .z () Bool (= @aj l2)) (define-fun .l () (_ BitVec 2) (ite @e                               #x00000000 @d))
(define-fun .m () Bool (= x+ .l))
(define-fun .n () Bool (not @a))
(define-fun .ab () Bool (or .n .m))
(define-fun .ac () Bool (or @e @c))
(define-fun .an () Bool .ac)
(define-fun .ad () Bool .an)
(define-fun .p () Bool (and .ad .ab))
(define-fun .ao () Bool (and .p .z))
(define-fun .ae () Bool (and .ao .y))
(define-fun .af () Bool (and .ae .w))
(define-fun .ag () Bool (and .af .aa))
(define-fun .q () Bool (and .ag .v))
(define-fun .r () Bool (and .q .o))
(define-fun s () Bool (! .r :trans h))
(define-fun ah () Bool (! .al :invar-property 0))
