; filename: "statemachine3_safe.c"
(set-info :source |Printed by VMT_Standalone 0.1 [taco]|)
; state variable decarations
(declare-fun %call-main* () (_ BitVec 32))
(declare-fun %call-main*+ () (_ BitVec 32))
(declare-fun %call1-main* () (_ BitVec 32))
(declare-fun %call1-main*+ () (_ BitVec 32))
(declare-fun %v.0-main* () (_ BitVec 32))
(declare-fun %v.0-main*+ () (_ BitVec 32))
(declare-fun %cond17-main* () (_ BitVec 32))
(declare-fun %cond17-main*+ () (_ BitVec 32))
(declare-fun %u.0-main* () (_ BitVec 32))
(declare-fun %u.0-main*+ () (_ BitVec 32))
(declare-fun %cond-main* () (_ BitVec 32))
(declare-fun %cond-main*+ () (_ BitVec 32))
(declare-fun %cond15-main* () (_ BitVec 32))
(declare-fun %cond15-main*+ () (_ BitVec 32))
(declare-fun %cond19-main* () (_ BitVec 32))
(declare-fun %cond19-main*+ () (_ BitVec 32))
(declare-fun %cond21-main* () (_ BitVec 32))
(declare-fun %cond21-main*+ () (_ BitVec 32))
(declare-fun %argc-main* () (_ BitVec 32))
(declare-fun %argc-main*+ () (_ BitVec 32))
(declare-fun @L9* () Bool)
(declare-fun @L9*+ () Bool)
(declare-fun @L15* () Bool)
(declare-fun @L15*+ () Bool)
(declare-fun @L25* () Bool)
(declare-fun @L25*+ () Bool)
(declare-fun %state.0-main* () (_ BitVec 32))
(declare-fun %state.0-main*+ () (_ BitVec 32))
(declare-fun @L26* () Bool)
(declare-fun @L26*+ () Bool)
(declare-fun @L14* () Bool)
(declare-fun @L14*+ () Bool)
(declare-fun @L11* () Bool)
(declare-fun @L11*+ () Bool)
(declare-fun @L7* () Bool)
(declare-fun @L7*+ () Bool)
(declare-fun @L2* () Bool)
(declare-fun @L2*+ () Bool)
(declare-fun %argv-main* () (_ BitVec 32))
(declare-fun %argv-main*+ () (_ BitVec 32))
(declare-fun @L0* () Bool)
(declare-fun @L0*+ () Bool)
; aux variable declarations
(declare-fun %Pivot9-main () Bool)
(declare-fun %Pivot-main () Bool)
(declare-fun %Pivot7-main () Bool)
(declare-fun %SwitchLeaf3-main () Bool)
(declare-fun %SwitchLeaf-main () Bool)
(declare-fun %cmp32-main () Bool)
(declare-fun %add-main () (_ BitVec 32))
(declare-fun %v.1-main () (_ BitVec 32))
(declare-fun %cmp29-main () Bool)
(declare-fun @L16 () Bool)
(declare-fun %cmp27-main () Bool)
(declare-fun @L23 () Bool)
(declare-fun %or.cond-main () Bool)
(declare-fun %cmp24-main () Bool)
(declare-fun @L21 () Bool)
(declare-fun %cmp23-main () Bool)
(declare-fun @L22 () Bool)
(declare-fun @L19 () Bool)
(declare-fun @L12 () Bool)
(declare-fun @L24 () Bool)
(declare-fun @L4 () Bool)
(declare-fun @L10 () Bool)
(declare-fun @L18 () Bool)
(declare-fun @L17 () Bool)
(declare-fun @L13 () Bool)
(declare-fun @L1 () Bool)
(declare-fun @L8 () Bool)
(declare-fun %or.cond1-main () Bool)
(declare-fun @L6 () Bool)
(declare-fun %cmp22-main () Bool)
(declare-fun @L5 () Bool)
(declare-fun %Pivot5-main () Bool)
(declare-fun %u.1-main () (_ BitVec 32))
(declare-fun @L20 () Bool)
(declare-fun @L3 () Bool)
; input variable decarations
(declare-fun call1-$Y32-1 () (_ BitVec 32))
(declare-fun call-$Y32-0 () (_ BitVec 32))
; :next defs for state vars
(define-fun .def0 () (_ BitVec 32) (! %call-main* :next %call-main*+))
(define-fun .def1 () (_ BitVec 32) (! %call1-main* :next %call1-main*+))
(define-fun .def2 () (_ BitVec 32) (! %v.0-main* :next %v.0-main*+))
(define-fun .def3 () (_ BitVec 32) (! %cond17-main* :next %cond17-main*+))
(define-fun .def4 () (_ BitVec 32) (! %u.0-main* :next %u.0-main*+))
(define-fun .def5 () (_ BitVec 32) (! %cond-main* :next %cond-main*+))
(define-fun .def6 () (_ BitVec 32) (! %cond15-main* :next %cond15-main*+))
(define-fun .def7 () (_ BitVec 32) (! %cond19-main* :next %cond19-main*+))
(define-fun .def8 () (_ BitVec 32) (! %cond21-main* :next %cond21-main*+))
(define-fun .def9 () (_ BitVec 32) (! %argc-main* :next %argc-main*+))
(define-fun .def10 () Bool (! @L9* :next @L9*+))
(define-fun .def11 () Bool (! @L15* :next @L15*+))
(define-fun .def12 () Bool (! @L25* :next @L25*+))
(define-fun .def13 () (_ BitVec 32) (! %state.0-main* :next %state.0-main*+))
(define-fun .def14 () Bool (! @L26* :next @L26*+))
(define-fun .def15 () Bool (! @L14* :next @L14*+))
(define-fun .def16 () Bool (! @L11* :next @L11*+))
(define-fun .def17 () Bool (! @L7* :next @L7*+))
(define-fun .def18 () Bool (! @L2* :next @L2*+))
(define-fun .def19 () (_ BitVec 32) (! %argv-main* :next %argv-main*+))
(define-fun .def20 () Bool (! @L0* :next @L0*+))
; initial state
(define-fun .def21 () Bool (= %argc-main* #x00000000))
(define-fun .def22 () Bool (= %argv-main* #x00000000))
(define-fun .def23 () Bool (= %call-main* #x00000000))
(define-fun .def24 () Bool (= %cond21-main* #x00000000))
(define-fun .def25 () Bool (= %cond15-main* #x00000000))
(define-fun .def26 () Bool (= %cond19-main* #x00000000))
(define-fun .def27 () Bool (= %v.0-main* #x00000000))
(define-fun .def28 () Bool (= %cond17-main* #x00000000))
(define-fun .def29 () Bool (= %call1-main* #x00000000))
(define-fun .def30 () Bool (= %state.0-main* #x00000000))
(define-fun .def31 () Bool (= %u.0-main* #x00000000))
(define-fun .def32 () Bool (= %cond-main* #x00000000))
(define-fun .def33 () Bool (not @L2*))
(define-fun .def34 () Bool (not @L26*))
(define-fun .def35 () Bool (not @L7*))
(define-fun .def36 () Bool (not @L11*))
(define-fun .def37 () Bool (not @L9*))
(define-fun .def38 () Bool (not @L15*))
(define-fun .def39 () Bool (not @L25*))
(define-fun .def40 () Bool (not @L14*))
(define-fun .def41 () Bool (and @L0* .def40 .def39 .def38 .def37 .def36 .def35 .def34 .def33 .def32 .def31 .def30 .def29 .def28 .def27 .def26 .def25 .def24 .def23 .def22 .def21))
(define-fun .def42 () Bool (! .def41 :init true))
; transition relation
(define-fun .def43 () Bool (= %argv-main*+ %argv-main*))
(define-fun .def44 () Bool (= %argc-main*+ %argc-main*))
(define-fun .def45 () Bool (= %cond21-main*+ %cond21-main*))
(define-fun .def46 () Bool (or @L15*+ .def45))
(define-fun .def47 () Bool (= %cond15-main*+ %cond15-main*))
(define-fun .def48 () Bool (or @L9*+ .def47))
(define-fun .def49 () Bool (= %cond19-main*+ %cond19-main*))
(define-fun .def50 () Bool (or @L14*+ .def49))
(define-fun .def51 () Bool (= %state.0-main*+ %state.0-main*))
(define-fun .def52 () Bool (or @L2*+ .def51))
(define-fun .def53 () Bool (= %v.0-main*+ %v.0-main*))
(define-fun .def54 () Bool (or @L2*+ .def53))
(define-fun .def55 () Bool (= %call1-main*+ %call1-main*))
(define-fun .def56 () Bool (or @L1 .def55))
(define-fun .def57 () Bool (= %cond17-main*+ %cond17-main*))
(define-fun .def58 () Bool (or @L7*+ .def57))
(define-fun .def59 () Bool (= %u.0-main*+ %u.0-main*))
(define-fun .def60 () Bool (or @L2*+ .def59))
(define-fun .def61 () Bool (= %cond-main*+ %cond-main*))
(define-fun .def62 () Bool (or @L11*+ .def61))
(define-fun .def63 () Bool (= %call-main*+ %call-main*))
(define-fun .def64 () Bool (or @L1 .def63))
(define-fun .def65 () Bool (or @L22 @L26*))
(define-fun .def66 () Bool (= @L26*+ .def65))
(define-fun .def67 () Bool (not %cmp32-main))
(define-fun .def68 () Bool (and @L23 .def67))
(define-fun .def69 () Bool (or .def68 @L25*))
(define-fun .def70 () Bool (= @L25*+ .def69))
(define-fun .def71 () Bool (and @L23 %cmp32-main))
(define-fun .def72 () Bool (= @L24 .def71))
(define-fun .def73 () Bool (= %cond21-main* #x00000001))
(define-fun .def74 () Bool (= %cmp23-main .def73))
(define-fun .def75 () (_ BitVec 32) (bvadd %u.1-main %v.1-main))
(define-fun .def76 () Bool (= %add-main .def75))
(define-fun .def77 () Bool (and %cmp23-main %cmp24-main))
(define-fun .def78 () Bool (= %or.cond-main .def77))
(define-fun .def79 () (_ BitVec 32) (ite @L1 call-$Y32-0 %call-main*))
(define-fun .def80 () (_ BitVec 32) (ite %or.cond-main .def79 %u.0-main*))
(define-fun .def81 () Bool (= %u.1-main .def80))
(define-fun .def82 () Bool (= %cond21-main* #x00000003))
(define-fun .def83 () Bool (= %cmp27-main .def82))
(define-fun .def84 () Bool (bvule #x00000003 .def79))
(define-fun .def85 () Bool (not .def84))
(define-fun .def86 () Bool (= %cmp24-main .def85))
(define-fun .def87 () (_ BitVec 32) (ite @L1 call1-$Y32-1 %call1-main*))
(define-fun .def88 () Bool (bvule #x00000005 .def87))
(define-fun .def89 () Bool (not .def88))
(define-fun .def90 () Bool (= %cmp29-main .def89))
(define-fun .def91 () Bool (bvule #x00000008 %add-main))
(define-fun .def92 () Bool (not .def91))
(define-fun .def93 () Bool (= %cmp32-main .def92))
(define-fun .def94 () Bool (and %cmp27-main %cmp29-main))
(define-fun .def95 () Bool (= %or.cond1-main .def94))
(define-fun .def96 () (_ BitVec 32) (ite %or.cond1-main .def87 %v.0-main*))
(define-fun .def97 () Bool (= %v.1-main .def96))
(define-fun .def98 () Bool (not %cmp22-main))
(define-fun .def99 () Bool (and @L21 .def98))
(define-fun .def100 () Bool (= @L23 .def99))
(define-fun .def101 () Bool (and @L21 %cmp22-main))
(define-fun .def102 () Bool (= @L22 .def101))
(define-fun .def103 () Bool (= %state.0-main* %cond21-main*))
(define-fun .def104 () Bool (= %cmp22-main .def103))
(define-fun .def105 () Bool (= @L21 @L15*))
(define-fun .def106 () Bool (= @L20 @L14*))
(define-fun .def107 () Bool (= @L19 @L7*))
(define-fun .def108 () Bool (= @L18 @L9*))
(define-fun .def109 () Bool (= @L17 @L11*))
(define-fun .def110 () Bool (= @L16 @L12))
(define-fun .def111 () (_ BitVec 32) (ite @L20 %cond19-main* #x00000001))
(define-fun .def112 () Bool (= %cond21-main*+ .def111))
(define-fun .def113 () Bool (not @L15*+))
(define-fun .def114 () Bool (or .def113 .def112))
(define-fun .def115 () Bool (and @L13 %SwitchLeaf-main))
(define-fun .def116 () Bool (or .def115 @L20))
(define-fun .def117 () Bool (= @L15*+ .def116))
(define-fun .def118 () (_ BitVec 32) (ite @L19 %cond17-main* #x00000002))
(define-fun .def119 () Bool (= %cond19-main*+ .def118))
(define-fun .def120 () Bool (not @L14*+))
(define-fun .def121 () Bool (or .def120 .def119))
(define-fun .def122 () Bool (not %Pivot-main))
(define-fun .def123 () Bool (and @L5 .def122))
(define-fun .def124 () Bool (or .def123 @L19))
(define-fun .def125 () Bool (= @L14*+ .def124))
(define-fun .def126 () Bool (= %SwitchLeaf-main .def30))
(define-fun .def127 () Bool (and @L5 %Pivot-main))
(define-fun .def128 () Bool (= @L13 .def127))
(define-fun .def129 () Bool (not %SwitchLeaf-main))
(define-fun .def130 () Bool (and @L13 .def129))
(define-fun .def131 () Bool (not %SwitchLeaf3-main))
(define-fun .def132 () Bool (and @L10 .def131))
(define-fun .def133 () Bool (or .def132 .def130))
(define-fun .def134 () Bool (= @L12 .def133))
(define-fun .def135 () (_ BitVec 32) (ite @L16 %state.0-main* #x00000005))
(define-fun .def136 () Bool (= %cond-main*+ .def135))
(define-fun .def137 () Bool (not @L11*+))
(define-fun .def138 () Bool (or .def137 .def136))
(define-fun .def139 () Bool (and @L10 %SwitchLeaf3-main))
(define-fun .def140 () Bool (or .def139 @L16))
(define-fun .def141 () Bool (= @L11*+ .def140))
(define-fun .def142 () Bool (= %state.0-main* #x00000004))
(define-fun .def143 () Bool (= %SwitchLeaf3-main .def142))
(define-fun .def144 () Bool (not %Pivot5-main))
(define-fun .def145 () Bool (and @L8 .def144))
(define-fun .def146 () Bool (= @L10 .def145))
(define-fun .def147 () (_ BitVec 32) (ite @L17 %cond-main* #x00000004))
(define-fun .def148 () Bool (= %cond15-main*+ .def147))
(define-fun .def149 () Bool (not @L9*+))
(define-fun .def150 () Bool (or .def149 .def148))
(define-fun .def151 () Bool (and @L8 %Pivot5-main))
(define-fun .def152 () Bool (or .def151 @L17))
(define-fun .def153 () Bool (= @L9*+ .def152))
(define-fun .def154 () Bool (bvsle #x00000004 %state.0-main*))
(define-fun .def155 () Bool (not .def154))
(define-fun .def156 () Bool (= %Pivot5-main .def155))
(define-fun .def157 () Bool (not %Pivot7-main))
(define-fun .def158 () Bool (and @L6 .def157))
(define-fun .def159 () Bool (= @L8 .def158))
(define-fun .def160 () (_ BitVec 32) (ite @L18 %cond15-main* #x00000003))
(define-fun .def161 () Bool (= %cond17-main*+ .def160))
(define-fun .def162 () Bool (not @L7*+))
(define-fun .def163 () Bool (or .def162 .def161))
(define-fun .def164 () Bool (and @L6 %Pivot7-main))
(define-fun .def165 () Bool (or .def164 @L18))
(define-fun .def166 () Bool (= @L7*+ .def165))
(define-fun .def167 () Bool (bvsle #x00000003 %state.0-main*))
(define-fun .def168 () Bool (not .def167))
(define-fun .def169 () Bool (= %Pivot7-main .def168))
(define-fun .def170 () Bool (not %Pivot9-main))
(define-fun .def171 () Bool (and @L4 .def170))
(define-fun .def172 () Bool (= @L6 .def171))
(define-fun .def173 () Bool (bvsle #x00000001 %state.0-main*))
(define-fun .def174 () Bool (not .def173))
(define-fun .def175 () Bool (= %Pivot-main .def174))
(define-fun .def176 () Bool (and @L4 %Pivot9-main))
(define-fun .def177 () Bool (= @L5 .def176))
(define-fun .def178 () Bool (bvsle #x00000002 %state.0-main*))
(define-fun .def179 () Bool (not .def178))
(define-fun .def180 () Bool (= %Pivot9-main .def179))
(define-fun .def181 () Bool (= @L4 @L3))
(define-fun .def182 () Bool (= @L3 @L2*))
(define-fun .def183 () (_ BitVec 32) (ite @L1 #x00000000 %u.1-main))
(define-fun .def184 () Bool (= %u.0-main*+ .def183))
(define-fun .def185 () Bool (not @L2*+))
(define-fun .def186 () Bool (or .def185 .def184))
(define-fun .def187 () (_ BitVec 32) (ite @L1 #x00000000 %v.1-main))
(define-fun .def188 () Bool (= %v.0-main*+ .def187))
(define-fun .def189 () Bool (or .def185 .def188))
(define-fun .def190 () (_ BitVec 32) (ite @L1 #x00000000 %cond21-main*))
(define-fun .def191 () Bool (= %state.0-main*+ .def190))
(define-fun .def192 () Bool (or .def185 .def191))
(define-fun .def193 () Bool (or @L1 @L24))
(define-fun .def194 () Bool (= @L2*+ .def193))
(define-fun .def195 () Bool (= %call-main*+ call-$Y32-0))
(define-fun .def196 () Bool (not @L1))
(define-fun .def197 () Bool (or .def196 .def195))
(define-fun .def198 () Bool (= %call1-main*+ call1-$Y32-1))
(define-fun .def199 () Bool (or .def196 .def198))
(define-fun .def200 () Bool (= @L1 @L0*))
(define-fun .def201 () Bool (not @L0*+))
(define-fun .def202 () Bool (and .def201 .def200))
(define-fun .def203 () Bool (and .def202 .def199))
(define-fun .def204 () Bool (and .def203 .def197))
(define-fun .def205 () Bool (and .def204 .def194))
(define-fun .def206 () Bool (and .def205 .def192))
(define-fun .def207 () Bool (and .def206 .def189))
(define-fun .def208 () Bool (and .def207 .def186))
(define-fun .def209 () Bool (and .def208 .def182))
(define-fun .def210 () Bool (and .def209 .def181))
(define-fun .def211 () Bool (and .def210 .def180))
(define-fun .def212 () Bool (and .def211 .def177))
(define-fun .def213 () Bool (and .def212 .def175))
(define-fun .def214 () Bool (and .def213 .def172))
(define-fun .def215 () Bool (and .def214 .def169))
(define-fun .def216 () Bool (and .def215 .def166))
(define-fun .def217 () Bool (and .def216 .def163))
(define-fun .def218 () Bool (and .def217 .def159))
(define-fun .def219 () Bool (and .def218 .def156))
(define-fun .def220 () Bool (and .def219 .def153))
(define-fun .def221 () Bool (and .def220 .def150))
(define-fun .def222 () Bool (and .def221 .def146))
(define-fun .def223 () Bool (and .def222 .def143))
(define-fun .def224 () Bool (and .def223 .def141))
(define-fun .def225 () Bool (and .def224 .def138))
(define-fun .def226 () Bool (and .def225 .def134))
(define-fun .def227 () Bool (and .def226 .def128))
(define-fun .def228 () Bool (and .def227 .def126))
(define-fun .def229 () Bool (and .def228 .def125))
(define-fun .def230 () Bool (and .def229 .def121))
(define-fun .def231 () Bool (and .def230 .def117))
(define-fun .def232 () Bool (and .def231 .def114))
(define-fun .def233 () Bool (and .def232 .def110))
(define-fun .def234 () Bool (and .def233 .def109))
(define-fun .def235 () Bool (and .def234 .def108))
(define-fun .def236 () Bool (and .def235 .def107))
(define-fun .def237 () Bool (and .def236 .def106))
(define-fun .def238 () Bool (and .def237 .def105))
(define-fun .def239 () Bool (and .def238 .def104))
(define-fun .def240 () Bool (and .def239 .def102))
(define-fun .def241 () Bool (and .def240 .def100))
(define-fun .def242 () Bool (and .def241 .def97))
(define-fun .def243 () Bool (and .def242 .def95))
(define-fun .def244 () Bool (and .def243 .def93))
(define-fun .def245 () Bool (and .def244 .def90))
(define-fun .def246 () Bool (and .def245 .def86))
(define-fun .def247 () Bool (and .def246 .def83))
(define-fun .def248 () Bool (and .def247 .def81))
(define-fun .def249 () Bool (and .def248 .def78))
(define-fun .def250 () Bool (and .def249 .def76))
(define-fun .def251 () Bool (and .def250 .def74))
(define-fun .def252 () Bool (and .def251 .def72))
(define-fun .def253 () Bool (and .def252 .def70))
(define-fun .def254 () Bool (and .def253 .def66))
(define-fun .def255 () Bool (and .def254 .def64))
(define-fun .def256 () Bool (and .def255 .def62))
(define-fun .def257 () Bool (and .def256 .def60))
(define-fun .def258 () Bool (and .def257 .def58))
(define-fun .def259 () Bool (and .def258 .def56))
(define-fun .def260 () Bool (and .def259 .def54))
(define-fun .def261 () Bool (and .def260 .def52))
(define-fun .def262 () Bool (and .def261 .def50))
(define-fun .def263 () Bool (and .def262 .def48))
(define-fun .def264 () Bool (and .def263 .def46))
(define-fun .def265 () Bool (and .def264 .def44))
(define-fun .def266 () Bool (and .def265 .def43))
(define-fun .def267 () Bool (! .def266 :trans true))
; property
(define-fun .def268 () Bool (! .def39 :invar-property 0))
(assert true)
