; filename: "../../vmt2/examples/blast1_safe.c"
(set-info :source |Printed by VMT_Standalone 0.1 [taco]|)
; state variable decarations
(declare-fun %LOCK.3-main* () (_ BitVec 32))
(declare-fun %LOCK.3-main*+ () (_ BitVec 32))
(declare-fun %LOCK.0-main* () (_ BitVec 32))
(declare-fun %LOCK.0-main*+ () (_ BitVec 32))
(declare-fun %new.1-main* () (_ BitVec 32))
(declare-fun %new.1-main*+ () (_ BitVec 32))
(declare-fun %got_lock.0-main* () (_ BitVec 32))
(declare-fun %got_lock.0-main*+ () (_ BitVec 32))
(declare-fun %LOCK.4-main* () (_ BitVec 32))
(declare-fun %LOCK.4-main*+ () (_ BitVec 32))
(declare-fun %call11-main* () (_ BitVec 32))
(declare-fun %call11-main*+ () (_ BitVec 32))
(declare-fun %new.0-main* () (_ BitVec 32))
(declare-fun %new.0-main*+ () (_ BitVec 32))
(declare-fun @L29* () Bool)
(declare-fun @L29*+ () Bool)
(declare-fun %LOCK.1-main* () (_ BitVec 32))
(declare-fun %LOCK.1-main*+ () (_ BitVec 32))
(declare-fun @L28* () Bool)
(declare-fun @L28*+ () Bool)
(declare-fun @L24* () Bool)
(declare-fun @L24*+ () Bool)
(declare-fun %call-main* () (_ BitVec 32))
(declare-fun %call-main*+ () (_ BitVec 32))
(declare-fun @L22* () Bool)
(declare-fun @L22*+ () Bool)
(declare-fun @L9* () Bool)
(declare-fun @L9*+ () Bool)
(declare-fun @L14* () Bool)
(declare-fun @L14*+ () Bool)
(declare-fun @L4* () Bool)
(declare-fun @L4*+ () Bool)
(declare-fun @L20* () Bool)
(declare-fun @L20*+ () Bool)
(declare-fun %LOCK.2-main* () (_ BitVec 32))
(declare-fun %LOCK.2-main*+ () (_ BitVec 32))
(declare-fun %call1-main* () (_ BitVec 32))
(declare-fun %call1-main*+ () (_ BitVec 32))
(declare-fun @L13* () Bool)
(declare-fun @L13*+ () Bool)
(declare-fun %call7-main* () (_ BitVec 32))
(declare-fun %call7-main*+ () (_ BitVec 32))
(declare-fun @L10* () Bool)
(declare-fun @L10*+ () Bool)
(declare-fun @L17* () Bool)
(declare-fun @L17*+ () Bool)
(declare-fun @L7* () Bool)
(declare-fun @L7*+ () Bool)
(declare-fun %LOCK.5-main* () (_ BitVec 32))
(declare-fun %LOCK.5-main*+ () (_ BitVec 32))
(declare-fun @L3* () Bool)
(declare-fun @L3*+ () Bool)
(declare-fun @L0* () Bool)
(declare-fun @L0*+ () Bool)
; aux variable declarations
(declare-fun %tobool-main () Bool)
(declare-fun %tobool2-main () Bool)
(declare-fun %cmp.i-main () Bool)
(declare-fun %inc-main () (_ BitVec 32))
(declare-fun %tobool4-main () Bool)
(declare-fun %cmp.i1-main () Bool)
(declare-fun %tobool12-main () Bool)
(declare-fun %cmp.i6-main () Bool)
(declare-fun %cmp-main () Bool)
(declare-fun %cmp.i3-main () Bool)
(declare-fun %cmp.i9-main () Bool)
(declare-fun @L16 () Bool)
(declare-fun @L26 () Bool)
(declare-fun @L23 () Bool)
(declare-fun @L25 () Bool)
(declare-fun @L21 () Bool)
(declare-fun @L18 () Bool)
(declare-fun @L11 () Bool)
(declare-fun @L12 () Bool)
(declare-fun @L19 () Bool)
(declare-fun @L6 () Bool)
(declare-fun @L1 () Bool)
(declare-fun @L8 () Bool)
(declare-fun @L2 () Bool)
(declare-fun @L15 () Bool)
(declare-fun @L27 () Bool)
(declare-fun @L5 () Bool)
(declare-fun %inc14-main () (_ BitVec 32))
(declare-fun %tobool8-main () Bool)
; input variable decarations
(declare-fun call-$Y32-3 () (_ BitVec 32))
(declare-fun call7-$Y32-1 () (_ BitVec 32))
(declare-fun call1-$Y32-2 () (_ BitVec 32))
(declare-fun call11-$Y32-0 () (_ BitVec 32))
; :next defs for state vars
(define-fun .def0 () (_ BitVec 32) (! %LOCK.3-main* :next %LOCK.3-main*+))
(define-fun .def1 () (_ BitVec 32) (! %LOCK.0-main* :next %LOCK.0-main*+))
(define-fun .def2 () (_ BitVec 32) (! %new.1-main* :next %new.1-main*+))
(define-fun .def3 () (_ BitVec 32) (! %got_lock.0-main* :next %got_lock.0-main*+))
(define-fun .def4 () (_ BitVec 32) (! %LOCK.4-main* :next %LOCK.4-main*+))
(define-fun .def5 () (_ BitVec 32) (! %call11-main* :next %call11-main*+))
(define-fun .def6 () (_ BitVec 32) (! %new.0-main* :next %new.0-main*+))
(define-fun .def7 () Bool (! @L29* :next @L29*+))
(define-fun .def8 () (_ BitVec 32) (! %LOCK.1-main* :next %LOCK.1-main*+))
(define-fun .def9 () Bool (! @L28* :next @L28*+))
(define-fun .def10 () Bool (! @L24* :next @L24*+))
(define-fun .def11 () (_ BitVec 32) (! %call-main* :next %call-main*+))
(define-fun .def12 () Bool (! @L22* :next @L22*+))
(define-fun .def13 () Bool (! @L9* :next @L9*+))
(define-fun .def14 () Bool (! @L14* :next @L14*+))
(define-fun .def15 () Bool (! @L4* :next @L4*+))
(define-fun .def16 () Bool (! @L20* :next @L20*+))
(define-fun .def17 () (_ BitVec 32) (! %LOCK.2-main* :next %LOCK.2-main*+))
(define-fun .def18 () (_ BitVec 32) (! %call1-main* :next %call1-main*+))
(define-fun .def19 () Bool (! @L13* :next @L13*+))
(define-fun .def20 () (_ BitVec 32) (! %call7-main* :next %call7-main*+))
(define-fun .def21 () Bool (! @L10* :next @L10*+))
(define-fun .def22 () Bool (! @L17* :next @L17*+))
(define-fun .def23 () Bool (! @L7* :next @L7*+))
(define-fun .def24 () (_ BitVec 32) (! %LOCK.5-main* :next %LOCK.5-main*+))
(define-fun .def25 () Bool (! @L3* :next @L3*+))
(define-fun .def26 () Bool (! @L0* :next @L0*+))
; initial state
(define-fun .def27 () Bool (= %new.1-main* #x00000000))
(define-fun .def28 () Bool (= %call11-main* #x00000000))
(define-fun .def29 () Bool (= %LOCK.4-main* #x00000000))
(define-fun .def30 () Bool (= %LOCK.5-main* #x00000000))
(define-fun .def31 () Bool (= %call-main* #x00000000))
(define-fun .def32 () Bool (= %call7-main* #x00000000))
(define-fun .def33 () Bool (= %LOCK.1-main* #x00000000))
(define-fun .def34 () Bool (= %got_lock.0-main* #x00000000))
(define-fun .def35 () Bool (= %call1-main* #x00000000))
(define-fun .def36 () Bool (= %new.0-main* #x00000000))
(define-fun .def37 () Bool (= %LOCK.2-main* #x00000000))
(define-fun .def38 () Bool (= %LOCK.0-main* #x00000000))
(define-fun .def39 () Bool (= %LOCK.3-main* #x00000000))
(define-fun .def40 () Bool (not @L17*))
(define-fun .def41 () Bool (not @L4*))
(define-fun .def42 () Bool (not @L28*))
(define-fun .def43 () Bool (not @L3*))
(define-fun .def44 () Bool (not @L7*))
(define-fun .def45 () Bool (not @L24*))
(define-fun .def46 () Bool (not @L10*))
(define-fun .def47 () Bool (not @L20*))
(define-fun .def48 () Bool (not @L13*))
(define-fun .def49 () Bool (not @L9*))
(define-fun .def50 () Bool (not @L14*))
(define-fun .def51 () Bool (not @L22*))
(define-fun .def52 () Bool (not @L29*))
(define-fun .def53 () Bool (and @L0* .def52 .def51 .def50 .def49 .def48 .def47 .def46 .def45 .def44 .def43 .def42 .def41 .def40 .def39 .def38 .def37 .def36 .def35 .def34 .def33 .def32 .def31 .def30 .def29 .def28 .def27))
(define-fun .def54 () Bool (! .def53 :init true))
; transition relation
(define-fun .def55 () Bool (= %LOCK.3-main*+ %LOCK.3-main*))
(define-fun .def56 () Bool (or @L3*+ .def55))
(define-fun .def57 () Bool (= %new.1-main*+ %new.1-main*))
(define-fun .def58 () Bool (or @L22*+ .def57))
(define-fun .def59 () Bool (= %call11-main*+ %call11-main*))
(define-fun .def60 () Bool (or @L19 .def59))
(define-fun .def61 () Bool (= %call7-main*+ %call7-main*))
(define-fun .def62 () Bool (or @L15 .def61))
(define-fun .def63 () Bool (= %LOCK.1-main*+ %LOCK.1-main*))
(define-fun .def64 () Bool (or @L7*+ .def63))
(define-fun .def65 () Bool (= %got_lock.0-main*+ %got_lock.0-main*))
(define-fun .def66 () Bool (or @L7*+ .def65))
(define-fun .def67 () Bool (= %call1-main*+ %call1-main*))
(define-fun .def68 () Bool (or @L5 .def67))
(define-fun .def69 () Bool (= %new.0-main*+ %new.0-main*))
(define-fun .def70 () Bool (or @L17*+ .def69))
(define-fun .def71 () Bool (= %LOCK.5-main*+ %LOCK.5-main*))
(define-fun .def72 () Bool (or @L22*+ .def71))
(define-fun .def73 () Bool (= %call-main*+ %call-main*))
(define-fun .def74 () Bool (or @L1 .def73))
(define-fun .def75 () Bool (= %LOCK.4-main*+ %LOCK.4-main*))
(define-fun .def76 () Bool (or @L17*+ .def75))
(define-fun .def77 () Bool (= %LOCK.2-main*+ %LOCK.2-main*))
(define-fun .def78 () Bool (or @L13*+ .def77))
(define-fun .def79 () Bool (= %LOCK.0-main*+ %LOCK.0-main*))
(define-fun .def80 () Bool (or @L4*+ .def79))
(define-fun .def81 () Bool (or @L27 @L29*))
(define-fun .def82 () Bool (= @L29*+ .def81))
(define-fun .def83 () Bool (not %cmp.i9-main))
(define-fun .def84 () Bool (and @L26 .def83))
(define-fun .def85 () Bool (= @L28*+ .def84))
(define-fun .def86 () Bool (and @L26 %cmp.i9-main))
(define-fun .def87 () Bool (= @L27 .def86))
(define-fun .def88 () Bool (= %LOCK.5-main* #x00000001))
(define-fun .def89 () Bool (= %cmp.i9-main .def88))
(define-fun .def90 () Bool (not %cmp-main))
(define-fun .def91 () Bool (and @L25 .def90))
(define-fun .def92 () Bool (= @L26 .def91))
(define-fun .def93 () Bool (= %new.1-main* %new.0-main*))
(define-fun .def94 () Bool (not .def93))
(define-fun .def95 () Bool (= %cmp-main .def94))
(define-fun .def96 () Bool (= @L25 @L22*))
(define-fun .def97 () Bool (not %cmp.i6-main))
(define-fun .def98 () Bool (and @L21 .def97))
(define-fun .def99 () Bool (= @L24*+ .def98))
(define-fun .def100 () (_ BitVec 32) (bvadd #x00000001 %new.0-main*))
(define-fun .def101 () Bool (= %inc14-main .def100))
(define-fun .def102 () Bool (and @L21 %cmp.i6-main))
(define-fun .def103 () Bool (= @L23 .def102))
(define-fun .def104 () (_ BitVec 32) (ite @L23 #x00000000 #x00000001))
(define-fun .def105 () Bool (= %LOCK.5-main*+ .def104))
(define-fun .def106 () Bool (not @L22*+))
(define-fun .def107 () Bool (or .def106 .def105))
(define-fun .def108 () (_ BitVec 32) (ite @L23 %inc14-main %new.0-main*))
(define-fun .def109 () Bool (= %new.1-main*+ .def108))
(define-fun .def110 () Bool (or .def106 .def109))
(define-fun .def111 () Bool (not %tobool12-main))
(define-fun .def112 () Bool (and @L19 .def111))
(define-fun .def113 () Bool (or .def112 @L23))
(define-fun .def114 () Bool (= @L22*+ .def113))
(define-fun .def115 () Bool (and @L19 %tobool12-main))
(define-fun .def116 () Bool (= @L21 .def115))
(define-fun .def117 () Bool (not %cmp.i3-main))
(define-fun .def118 () Bool (and @L18 .def117))
(define-fun .def119 () Bool (= @L20*+ .def118))
(define-fun .def120 () Bool (= %call11-main*+ call11-$Y32-0))
(define-fun .def121 () Bool (not @L19))
(define-fun .def122 () Bool (or .def121 .def120))
(define-fun .def123 () (_ BitVec 32) (ite @L19 call11-$Y32-0 %call11-main*))
(define-fun .def124 () Bool (= .def123 #x00000000))
(define-fun .def125 () Bool (not .def124))
(define-fun .def126 () Bool (= %tobool12-main .def125))
(define-fun .def127 () Bool (and @L18 %cmp.i3-main))
(define-fun .def128 () Bool (= @L19 .def127))
(define-fun .def129 () Bool (= %cmp.i3-main .def29))
(define-fun .def130 () Bool (= @L18 @L17*))
(define-fun .def131 () (_ BitVec 32) (ite @L16 %LOCK.3-main* %LOCK.5-main*))
(define-fun .def132 () Bool (= %LOCK.4-main*+ .def131))
(define-fun .def133 () Bool (not @L17*+))
(define-fun .def134 () Bool (or .def133 .def132))
(define-fun .def135 () (_ BitVec 32) (ite @L16 #x00000000 %new.1-main*))
(define-fun .def136 () Bool (= %new.0-main*+ .def135))
(define-fun .def137 () Bool (or .def133 .def136))
(define-fun .def138 () Bool (and @L25 %cmp-main))
(define-fun .def139 () Bool (or @L16 .def138))
(define-fun .def140 () Bool (= @L17*+ .def139))
(define-fun .def141 () Bool (= @L16 @L3*))
(define-fun .def142 () Bool (= %call7-main*+ call7-$Y32-1))
(define-fun .def143 () Bool (not @L15))
(define-fun .def144 () Bool (or .def143 .def142))
(define-fun .def145 () (_ BitVec 32) (ite @L15 call7-$Y32-1 %call7-main*))
(define-fun .def146 () Bool (= .def145 #x00000000))
(define-fun .def147 () Bool (not .def146))
(define-fun .def148 () Bool (= %tobool8-main .def147))
(define-fun .def149 () Bool (= @L15 @L13*))
(define-fun .def150 () Bool (not %cmp.i1-main))
(define-fun .def151 () Bool (and @L12 .def150))
(define-fun .def152 () Bool (= @L14*+ .def151))
(define-fun .def153 () Bool (not %tobool4-main))
(define-fun .def154 () Bool (and @L11 .def153))
(define-fun .def155 () (_ BitVec 32) (ite .def154 %LOCK.1-main* #x00000000))
(define-fun .def156 () Bool (= %LOCK.2-main*+ .def155))
(define-fun .def157 () Bool (not @L13*+))
(define-fun .def158 () Bool (or .def157 .def156))
(define-fun .def159 () Bool (and @L12 %cmp.i1-main))
(define-fun .def160 () Bool (or .def154 .def159))
(define-fun .def161 () Bool (= @L13*+ .def160))
(define-fun .def162 () Bool (= %LOCK.1-main* #x00000001))
(define-fun .def163 () Bool (= %cmp.i1-main .def162))
(define-fun .def164 () Bool (and @L11 %tobool4-main))
(define-fun .def165 () Bool (= @L12 .def164))
(define-fun .def166 () Bool (not .def34))
(define-fun .def167 () Bool (= %tobool4-main .def166))
(define-fun .def168 () Bool (= @L11 @L7*))
(define-fun .def169 () Bool (or @L24* @L28*))
(define-fun .def170 () Bool (or @L20* .def169))
(define-fun .def171 () Bool (or @L14* .def170))
(define-fun .def172 () Bool (or @L10* .def171))
(define-fun .def173 () Bool (or @L9* .def172))
(define-fun .def174 () Bool (= @L10*+ .def173))
(define-fun .def175 () Bool (not %cmp.i-main))
(define-fun .def176 () Bool (and @L6 .def175))
(define-fun .def177 () Bool (= @L9*+ .def176))
(define-fun .def178 () Bool (= %inc-main #x00000001))
(define-fun .def179 () Bool (and @L6 %cmp.i-main))
(define-fun .def180 () Bool (= @L8 .def179))
(define-fun .def181 () (_ BitVec 32) (ite @L8 #x00000001 %LOCK.0-main*))
(define-fun .def182 () Bool (= %LOCK.1-main*+ .def181))
(define-fun .def183 () Bool (not @L7*+))
(define-fun .def184 () Bool (or .def183 .def182))
(define-fun .def185 () (_ BitVec 32) (ite @L8 %inc-main #x00000000))
(define-fun .def186 () Bool (= %got_lock.0-main*+ .def185))
(define-fun .def187 () Bool (or .def183 .def186))
(define-fun .def188 () Bool (not %tobool2-main))
(define-fun .def189 () Bool (and @L5 .def188))
(define-fun .def190 () Bool (or .def189 @L8))
(define-fun .def191 () Bool (= @L7*+ .def190))
(define-fun .def192 () Bool (= %cmp.i-main .def38))
(define-fun .def193 () Bool (and @L5 %tobool2-main))
(define-fun .def194 () Bool (= @L6 .def193))
(define-fun .def195 () Bool (= %call1-main*+ call1-$Y32-2))
(define-fun .def196 () Bool (not @L5))
(define-fun .def197 () Bool (or .def196 .def195))
(define-fun .def198 () (_ BitVec 32) (ite @L5 call1-$Y32-2 %call1-main*))
(define-fun .def199 () Bool (= .def198 #x00000000))
(define-fun .def200 () Bool (not .def199))
(define-fun .def201 () Bool (= %tobool2-main .def200))
(define-fun .def202 () Bool (= @L5 @L4*))
(define-fun .def203 () (_ BitVec 32) (ite @L2 #x00000000 %LOCK.2-main*))
(define-fun .def204 () Bool (= %LOCK.0-main*+ .def203))
(define-fun .def205 () Bool (not @L4*+))
(define-fun .def206 () Bool (or .def205 .def204))
(define-fun .def207 () Bool (and @L15 %tobool8-main))
(define-fun .def208 () Bool (or @L2 .def207))
(define-fun .def209 () Bool (= @L4*+ .def208))
(define-fun .def210 () Bool (not %tobool-main))
(define-fun .def211 () Bool (and @L1 .def210))
(define-fun .def212 () (_ BitVec 32) (ite .def211 #x00000000 %LOCK.2-main*))
(define-fun .def213 () Bool (= %LOCK.3-main*+ .def212))
(define-fun .def214 () Bool (not @L3*+))
(define-fun .def215 () Bool (or .def214 .def213))
(define-fun .def216 () Bool (not %tobool8-main))
(define-fun .def217 () Bool (and @L15 .def216))
(define-fun .def218 () Bool (or .def211 .def217))
(define-fun .def219 () Bool (= @L3*+ .def218))
(define-fun .def220 () Bool (and @L1 %tobool-main))
(define-fun .def221 () Bool (= @L2 .def220))
(define-fun .def222 () Bool (= %call-main*+ call-$Y32-3))
(define-fun .def223 () Bool (not @L1))
(define-fun .def224 () Bool (or .def223 .def222))
(define-fun .def225 () (_ BitVec 32) (ite @L1 call-$Y32-3 %call-main*))
(define-fun .def226 () Bool (= .def225 #x00000000))
(define-fun .def227 () Bool (not .def226))
(define-fun .def228 () Bool (= %tobool-main .def227))
(define-fun .def229 () Bool (= @L1 @L0*))
(define-fun .def230 () Bool (not @L0*+))
(define-fun .def231 () Bool (and .def230 .def229))
(define-fun .def232 () Bool (and .def231 .def228))
(define-fun .def233 () Bool (and .def232 .def224))
(define-fun .def234 () Bool (and .def233 .def221))
(define-fun .def235 () Bool (and .def234 .def219))
(define-fun .def236 () Bool (and .def235 .def215))
(define-fun .def237 () Bool (and .def236 .def209))
(define-fun .def238 () Bool (and .def237 .def206))
(define-fun .def239 () Bool (and .def238 .def202))
(define-fun .def240 () Bool (and .def239 .def201))
(define-fun .def241 () Bool (and .def240 .def197))
(define-fun .def242 () Bool (and .def241 .def194))
(define-fun .def243 () Bool (and .def242 .def192))
(define-fun .def244 () Bool (and .def243 .def191))
(define-fun .def245 () Bool (and .def244 .def187))
(define-fun .def246 () Bool (and .def245 .def184))
(define-fun .def247 () Bool (and .def246 .def180))
(define-fun .def248 () Bool (and .def247 .def178))
(define-fun .def249 () Bool (and .def248 .def177))
(define-fun .def250 () Bool (and .def249 .def174))
(define-fun .def251 () Bool (and .def250 .def168))
(define-fun .def252 () Bool (and .def251 .def167))
(define-fun .def253 () Bool (and .def252 .def165))
(define-fun .def254 () Bool (and .def253 .def163))
(define-fun .def255 () Bool (and .def254 .def161))
(define-fun .def256 () Bool (and .def255 .def158))
(define-fun .def257 () Bool (and .def256 .def152))
(define-fun .def258 () Bool (and .def257 .def149))
(define-fun .def259 () Bool (and .def258 .def148))
(define-fun .def260 () Bool (and .def259 .def144))
(define-fun .def261 () Bool (and .def260 .def141))
(define-fun .def262 () Bool (and .def261 .def140))
(define-fun .def263 () Bool (and .def262 .def137))
(define-fun .def264 () Bool (and .def263 .def134))
(define-fun .def265 () Bool (and .def264 .def130))
(define-fun .def266 () Bool (and .def265 .def129))
(define-fun .def267 () Bool (and .def266 .def128))
(define-fun .def268 () Bool (and .def267 .def126))
(define-fun .def269 () Bool (and .def268 .def122))
(define-fun .def270 () Bool (and .def269 .def119))
(define-fun .def271 () Bool (and .def270 .def116))
(define-fun .def272 () Bool (and .def271 %cmp.i6-main))
(define-fun .def273 () Bool (and .def272 .def114))
(define-fun .def274 () Bool (and .def273 .def110))
(define-fun .def275 () Bool (and .def274 .def107))
(define-fun .def276 () Bool (and .def275 .def103))
(define-fun .def277 () Bool (and .def276 .def101))
(define-fun .def278 () Bool (and .def277 .def99))
(define-fun .def279 () Bool (and .def278 .def96))
(define-fun .def280 () Bool (and .def279 .def95))
(define-fun .def281 () Bool (and .def280 .def92))
(define-fun .def282 () Bool (and .def281 .def89))
(define-fun .def283 () Bool (and .def282 .def87))
(define-fun .def284 () Bool (and .def283 .def85))
(define-fun .def285 () Bool (and .def284 .def82))
(define-fun .def286 () Bool (and .def285 .def80))
(define-fun .def287 () Bool (and .def286 .def78))
(define-fun .def288 () Bool (and .def287 .def76))
(define-fun .def289 () Bool (and .def288 .def74))
(define-fun .def290 () Bool (and .def289 .def72))
(define-fun .def291 () Bool (and .def290 .def70))
(define-fun .def292 () Bool (and .def291 .def68))
(define-fun .def293 () Bool (and .def292 .def66))
(define-fun .def294 () Bool (and .def293 .def64))
(define-fun .def295 () Bool (and .def294 .def62))
(define-fun .def296 () Bool (and .def295 .def60))
(define-fun .def297 () Bool (and .def296 .def58))
(define-fun .def298 () Bool (and .def297 .def56))
(define-fun .def299 () Bool (! .def298 :trans true))
; property
(define-fun .def300 () Bool (and .def42 .def45 .def47 .def50 .def49))
(define-fun .def301 () Bool (! .def300 :invar-property 0))
(assert true)
