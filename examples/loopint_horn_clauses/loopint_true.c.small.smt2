(set-info :original "/benchmarks/loopint_true.c.bc")
(set-info :authors "SeaHorn v.0.1.0-rc3")
(declare-rel verifier.error (Bool Bool Bool ))
(declare-rel main@entry ())
(declare-rel main@_bb (Int ))
(declare-rel main@_bb1 (Int ))
(declare-rel main@_bb2 (Int ))
(declare-rel main@verifier.error.loopexit ())
(declare-rel main@verifier.error ())
(declare-rel main@verifier.error.split ())
(declare-var main@%_8_0 Bool )
(declare-var main@%_6_0 Bool )
(declare-var main@%_3_0 Bool )
(declare-var main@%_1_0 Bool )
(declare-var main@%_0_0 Int )
(declare-var main@%i.0.i_0 Int )
(declare-var main@%_5_0 Int )
(declare-var main@%i.0.i_1 Int )
(declare-var main@%.lcssa_0 Int )
(rule (verifier.error false false false))
(rule (verifier.error false true true))
(rule (verifier.error true false true))
(rule (verifier.error true true true))
(rule main@entry)
(rule (=> (and main@entry
         true
         (= main@%_1_0 (= main@%_0_0 0))
         main@%_1_0
         (= main@%i.0.i_0 main@%_0_0))
    (main@_bb main@%i.0.i_0)))
(rule (=> (and (main@_bb main@%i.0.i_0)
         true
         (= main@%_3_0 (< main@%i.0.i_0 7))
         main@%_3_0)
    (main@_bb1 main@%i.0.i_0)))
(rule (=> (and (main@_bb main@%i.0.i_0)
         true
         (= main@%_3_0 (< main@%i.0.i_0 7))
         (not main@%_3_0))
    main@verifier.error.loopexit))
(rule (=> (and (main@_bb1 main@%i.0.i_0)
         true
         (= main@%_5_0 (+ main@%i.0.i_0 3))
         (= main@%_6_0 (< main@%_5_0 5))
         main@%_6_0
         (= main@%i.0.i_1 main@%_5_0))
    (main@_bb main@%i.0.i_1)))
(rule (=> (and (main@_bb1 main@%i.0.i_0)
         true
         (= main@%_5_0 (+ main@%i.0.i_0 3))
         (= main@%_6_0 (< main@%_5_0 5))
         (not main@%_6_0)
         (= main@%.lcssa_0 main@%_5_0))
    (main@_bb2 main@%.lcssa_0)))
(rule (=> (and (main@_bb2 main@%.lcssa_0)
         true
         (= main@%_8_0 (< main@%.lcssa_0 7))
         (not main@%_8_0))
    main@verifier.error))
(rule (=> main@verifier.error.loopexit main@verifier.error))
(rule (=> main@verifier.error main@verifier.error.split))
(query main@verifier.error.split)

